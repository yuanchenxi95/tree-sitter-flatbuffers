==================
FBS test
==================

// Source: https://github.com/google/flatbuffers/blob/6a8898573cc4b3fbdec48e147f5b7948ed0d06cd/tests/test.fbs
// Generated from test.proto

include "imported.fbs";

namespace proto.test;

/// Enum doc comment.
enum ProtoEnum : int {
  NUL = 0,
  FOO = 1,
  /// Enum 2nd value doc comment misaligned.
  BAR = 5,
}

namespace proto.test.ProtoMessage_.OtherMessage_;

enum ProtoEnum : int {
  NUL = 0,
  FOO = 1,
  BAR = 2,
  BAZ = 3,
}

namespace proto.test;

/// 2nd table doc comment with
/// many lines.
table ProtoMessage {
  c:int = 16;
  d:long;
  p:uint;
  e:ulong;
  /// doc comment for f.
  f:int = -1;
  g:long;
  h:uint;
  q:ulong;
  i:int;
  j:long;
  /// doc comment for k.
  k:bool;
  /// doc comment for l on 2
  /// lines
  l:string (required);
  m:[ubyte];
  n:proto.test.ProtoMessage_.OtherMessage;
  o:[string];
  z:proto.test.ImportedMessage;
  /// doc comment for r.
  r:proto.test.ProtoMessage_.Anonymous0;
  outer_enum:proto.test.ProtoEnum;
  u:float = +inf;
  v:float = +inf;
  w:float = -inf;
  grades:[proto.test.ProtoMessage_.GradesEntry];
  other_message_map:[proto.test.ProtoMessage_.OtherMessageMapEntry];
}

namespace proto.test.ProtoMessage_;

table OtherMessage {
  a:double;
  /// doc comment for b.
  b:float = 3.14149;
  foo_bar_baz:proto.test.ProtoMessage_.OtherMessage_.ProtoEnum;
}

table Anonymous0 {
  /// doc comment for s.
  s:proto.test.ImportedMessage;
  /// doc comment for t on 2
  /// lines.
  t:proto.test.ProtoMessage_.OtherMessage;
}

table GradesEntry {
  key:string (key);
  value:float;
}

table OtherMessageMapEntry {
  key:string (key);
  value:proto.test.ProtoMessage_.OtherMessage;
}

---

(source_file
  (comment)
  (comment)
  (include
    (string_constant))
  (namespace_decl
    (full_ident
      (identifier)
      (identifier)))
  (enum_decl
    (documentation)
    (identifier)
    (type)
    (enum_val_decl
      (identifier)
      (int_constant
        (int_lit
          (decimal_lit))))
    (enum_val_decl
      (identifier)
      (int_constant
        (int_lit
          (decimal_lit))))
    (enum_val_decl
      (documentation)
      (identifier)
      (int_constant
        (int_lit
          (decimal_lit)))))
  (namespace_decl
    (full_ident
      (identifier)
      (identifier)
      (identifier)
      (identifier)))
  (enum_decl
    (identifier)
    (type)
    (enum_val_decl
      (identifier)
      (int_constant
        (int_lit
          (decimal_lit))))
    (enum_val_decl
      (identifier)
      (int_constant
        (int_lit
          (decimal_lit))))
    (enum_val_decl
      (identifier)
      (int_constant
        (int_lit
          (decimal_lit))))
    (enum_val_decl
      (identifier)
      (int_constant
        (int_lit
          (decimal_lit)))))
  (namespace_decl
    (full_ident
      (identifier)
      (identifier)))
  (type_decl
    (documentation)
    (documentation)
    (identifier)
    (field_decl
      (identifier)
      (type)
      (value
        (single_value
          (scalar
            (int_constant
              (int_lit
                (decimal_lit)))))))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (documentation)
      (identifier)
      (type)
      (value
        (single_value
          (scalar
            (int_constant
              (plus_minus_constant
                (minus_token))
              (int_lit
                (decimal_lit)))))))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (identifier)
      (type))
    (field_decl
      (documentation)
      (identifier)
      (type))
    (field_decl
      (documentation)
      (documentation)
      (identifier)
      (type)
      (metadata
        (field_and_value
          (identifier))))
    (field_decl
      (identifier)
      (type
        (type)))
    (field_decl
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier)
          (identifier))))
    (field_decl
      (identifier)
      (type
        (type)))
    (field_decl
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier))))
    (field_decl
      (documentation)
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier)
          (identifier))))
    (field_decl
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier))))
    (field_decl
      (identifier)
      (type)
      (value
        (single_value
          (scalar
            (float_constant
              (plus_minus_constant
                (plus_token))
              (float_lit
                (inf_token)))))))
    (field_decl
      (identifier)
      (type)
      (value
        (single_value
          (scalar
            (float_constant
              (plus_minus_constant
                (plus_token))
              (float_lit
                (inf_token)))))))
    (field_decl
      (identifier)
      (type)
      (value
        (single_value
          (scalar
            (float_constant
              (plus_minus_constant
                (minus_token))
              (float_lit
                (inf_token)))))))
    (field_decl
      (identifier)
      (type
        (type
          (full_ident
            (identifier)
            (identifier)
            (identifier)
            (identifier)))))
    (field_decl
      (identifier)
      (type
        (type
          (full_ident
            (identifier)
            (identifier)
            (identifier)
            (identifier))))))
  (namespace_decl
    (full_ident
      (identifier)
      (identifier)
      (identifier)))
  (type_decl
    (identifier)
    (field_decl
      (identifier)
      (type))
    (field_decl
      (documentation)
      (identifier)
      (type)
      (value
        (single_value
          (scalar
            (float_constant
              (float_lit))))))
    (field_decl
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier)
          (identifier)
          (identifier)))))
  (type_decl
    (identifier)
    (field_decl
      (documentation)
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier))))
    (field_decl
      (documentation)
      (documentation)
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier)
          (identifier)))))
  (type_decl
    (identifier)
    (field_decl
      (identifier)
      (type)
      (metadata
        (field_and_value
          (identifier))))
    (field_decl
      (identifier)
      (type)))
  (type_decl
    (identifier)
    (field_decl
      (identifier)
      (type)
      (metadata
        (field_and_value
          (identifier))))
    (field_decl
      (identifier)
      (type
        (full_ident
          (identifier)
          (identifier)
          (identifier)
          (identifier))))))
